diff --git a/app/(external)/packages/_components/Pricing.tsx b/app/(external)/packages/_components/Pricing.tsx
index b3ed86f..f83bcfc 100644
--- a/app/(external)/packages/_components/Pricing.tsx
+++ b/app/(external)/packages/_components/Pricing.tsx
@@ -2,10 +2,10 @@
 /* eslint-disable @typescript-eslint/no-explicit-any */
 /* eslint-disable @typescript-eslint/no-unused-vars */
 import { useLazyGetPricingQuery, useSignupMutation } from "@/redux/api/auth";
-//import { useLazyCreateStripeSubscriptionV2Query } from "@/redux/api/subscriptionApi";
-import { useSearchParams } from "next/navigation";
+import { useLazyCreateStripeSubscriptionV2Query } from "@/redux/api/subscriptionApi";
+import { useRouter, useSearchParams } from "next/navigation";
 import { useEffect, useState } from "react";
-import { IoIosCheckmark } from "react-icons/io";
+import { IoIosCheckmark, IoIosCheckmarkCircle } from "react-icons/io";
 import { message } from "antd";
 import { MdCancel } from "react-icons/md";
 import { FaCircle } from "react-icons/fa6";
@@ -15,7 +15,6 @@ interface Feature {
   description: string;
 }
 
-
 interface PricingPlan {
   id: number;
   name: string;
@@ -37,7 +36,7 @@ interface PricingPlan {
 }
 
 export default function Packages() {
-  //const router = useRouter();
+  const router = useRouter();
   const searchParams = useSearchParams();
   const [messageApi, contextHolder] = message.useMessage();
 
@@ -48,6 +47,7 @@ export default function Packages() {
   }>({});
   const [selectedPlanId, setSelectedPlanId] = useState<number | null>(null);
   const [showModal, setShowModal] = useState(false);
+  const [showEmailExistsModal, setShowEmailExistsModal] = useState(false);
 
   // User data from signup flow
   const [userEmail, setUserEmail] = useState<string>("");
@@ -60,7 +60,28 @@ export default function Packages() {
   const [subscribe, { isLoading: isCheckoutLoading }] = useSignupMutation();
   //const [subscribe, { isLoading: isCheckoutLoading }] = useLazyCreateStripeSubscriptionV2Query();
 
-  
+  const stats = [
+    {
+      value: "$92",
+      title: "Blended ARPU",
+      subtitle: "Weighted average revenue per user",
+    },
+    {
+      value: "85%",
+      title: "Gross Margins",
+      subtitle: "High-margin SaaS model",
+    },
+    {
+      value: "8%",
+      title: "Monthly Churn",
+      subtitle: "Industry-competitive retention",
+    },
+    {
+      value: "2.3x",
+      title: "LTV/CAC Ratio",
+      subtitle: "Healthy unit economics",
+    },
+  ];
 
   // Handle URL params from signup redirect
   useEffect(() => {
@@ -99,6 +120,19 @@ export default function Packages() {
     });
   };
 
+  // Navigation functions for email exists modal
+  const handleGoToLogin = () => {
+    setShowEmailExistsModal(false);
+    // Navigate to login page - adjust the route as needed
+    router.push('/');
+  };
+
+  const handleResetPassword = () => {
+    setShowEmailExistsModal(false);
+    // Navigate to reset password page - adjust the route as needed
+    router.push('/forgot-password');
+  };
+
   // Direct checkout function for signup flow
   const proceedToCheckout = async (plan: any) => {
     if (!userEmail || !userFullname) {
@@ -137,7 +171,14 @@ export default function Packages() {
       }
     } catch (err: any) {
       console.error("Checkout error:", err);
-      error(err?.data?.message || "An error occurred during checkout");
+      
+      // Check if it's the email already exists error
+      if (err?.data?.responseCode === "91" || 
+          (err?.data?.status === 422 && err?.data?.message?.includes("already registered"))) {
+        setShowEmailExistsModal(true);
+      } else {
+        error(err?.data?.message || "An error occurred during checkout");
+      }
     }
   };
 
@@ -153,7 +194,7 @@ export default function Packages() {
       (a, b) => parseFloat(a.price) - parseFloat(b.price)
     );
 
-    return sortedPlans.map((plan, _index) => {
+    return sortedPlans.map((plan, index) => {
       // Determine if this is the default highlighted plan (Premium)
       const isDefaultHighlighted = plan.name.toUpperCase() === "PREMIUM";
 
@@ -218,7 +259,7 @@ export default function Packages() {
           notes.find((note) => note.includes("Support")) ||
           "Annual subscription";
       }
-
+ const isDisabled = plan.name.toUpperCase() == "SAGE";
       return {
         id: plan.id,
         name: plan.name, // Keep original name without modification
@@ -233,6 +274,7 @@ export default function Packages() {
         stripePriceId: plan.id,
         interval: plan.interval,
         trial: plan.trial,
+        isDisabled
       };
     });
   };
@@ -265,15 +307,15 @@ export default function Packages() {
     setSelectedPlanId(planId);
   };
 
-  const handleGetStarted = (planId: number) => {
+ const handleGetStarted = (planId: number) => {
     const plan = processedPlans.find((p) => p.id === planId);
-    if (plan) {
+    if (plan && !plan.isDisabled) {
       if (plan.trial > 0) {
         // Show modal for free trial plans
         setSelectedPlanId(planId);
         setShowModal(true);
       } else {
-        // Direct checkout for non-trial plans
+        // Direct redirect for non-trial plans
         handlePlanSelection(plan);
       }
     }
@@ -380,6 +422,12 @@ export default function Packages() {
                       : "bg-white border border-[#D6D6D6] hover:border-[#08B27C] hover:shadow-md"
                   }`}
                 >
+                  {/* Coming Soon Badge for disabled plans */}
+                  {plan.isDisabled && (
+                    <div className="absolute top-2 right-2 bg-gray-600 text-white px-3 py-1 text-sm rounded-lg">
+                      Coming Soon
+                    </div>
+                  )}
                   {isHighlighted && (
                     <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 border border-[#08B27D] bg-white text-[#596375] text-xs px-3 py-1 rounded-full">
                       {plan.name.toUpperCase() === "PREMIUM" && isSelected ? "Most Popular" : "Selected"}
@@ -483,17 +531,17 @@ export default function Packages() {
                     >
                       {plan.note}
                     </p>
-                    <button
+                     <button
                       onClick={(e) => {
                         e.stopPropagation(); // Prevent card selection when clicking button
                         handleGetStarted(plan.id);
                       }}
-                      disabled={
-                        !isSelected || isButtonLoading(plan, isSelected)
-                      }
+                      disabled={!isSelected || plan.isDisabled}
                       className={`mt-3 w-full rounded-lg text-sm py-2 font-medium transition-all duration-200
                     ${
-                      isSelected && !isButtonLoading(plan, isSelected)
+                      plan.isDisabled
+                        ? "bg-gray-300 text-gray-500 cursor-not-allowed"
+                        : isSelected
                         ? isHighlighted
                           ? "bg-[#FFB951] text-white hover:bg-[#FF8E51] cursor-pointer"
                           : "bg-[#FFB951] text-white hover:bg-[#FF8E51] cursor-pointer"
@@ -501,7 +549,11 @@ export default function Packages() {
                     }
                   `}
                     >
-                      {getButtonText(plan, isSelected)}
+                      {plan.isDisabled
+                        ? "Unavailable"
+                        : isSelected
+                        ? plan.buttonText
+                        : "Select plan first"}
                     </button>
                   </div>
                 </div>
@@ -554,6 +606,59 @@ export default function Packages() {
           </div>
         </div>
       )}
+
+      {/* Email Already Exists Modal */}
+      {showEmailExistsModal && (
+        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 p-4 sm:p-0 z-50">
+          <div className="bg-white p-6 rounded-lg shadow-lg max-w-md text-center">
+            <div className="mb-4">
+              <div className="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-yellow-100">
+                <svg
+                  className="h-6 w-6 text-yellow-600"
+                  fill="none"
+                  viewBox="0 0 24 24"
+                  strokeWidth="1.5"
+                  stroke="currentColor"
+                >
+                  <path
+                    strokeLinecap="round"
+                    strokeLinejoin="round"
+                    d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"
+                  />
+                </svg>
+              </div>
+            </div>
+            <h3 className="text-lg font-medium text-gray-900 mb-2">
+              Account Already Exists
+            </h3>
+            <p className="text-sm text-gray-500 mb-6">
+              We notice this email <span className=" font-semibold">({userEmail})</span> already exists in our system. You can either login to your existing account or reset your password if you&apos;ve forgotten it.
+            </p>
+            <div className="flex flex-col sm:flex-row gap-3 justify-around">
+              {/** 
+              <button
+                className="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors"
+                onClick={() => setShowEmailExistsModal(false)}
+              >
+                Cancel
+              </button>
+              */}
+              <button
+                className="px-4 py-2 bg-white border border-green-600 text-green-600 rounded-lg hover:bg-green-600 hover:text-white transition-colors"
+                onClick={handleGoToLogin}
+              >
+                Go to Login
+              </button>
+              <button
+                className="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
+                onClick={handleResetPassword}
+              >
+                Reset Password
+              </button>
+            </div>
+          </div>
+        </div>
+      )}
     </section>
   );
 }
\ No newline at end of file
diff --git a/app/(external)/pricing/_components/Pricing.tsx b/app/(external)/pricing/_components/Pricing.tsx
index 73a10b9..5cb01d4 100644
--- a/app/(external)/pricing/_components/Pricing.tsx
+++ b/app/(external)/pricing/_components/Pricing.tsx
@@ -144,7 +144,7 @@ export default function Pricing() {
 
       // Check if plan should be disabled (only STARTER (PRO) is available)
       //const isDisabled = plan.name.toUpperCase() !== 'STARTER (PRO)';
-      const isDisabled = plan.name.toUpperCase() == "";
+      const isDisabled = plan.name.toUpperCase() == "SAGE";
 
       return {
         id: plan.id,
