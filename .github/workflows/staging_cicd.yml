name: 'Dev Server Deployment'

on:
  push:
    branches:
      - staging

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ vars.ORG_NAME }}

jobs:
  deployOptisageFrontend:
    name: Optisage Frontend Deployment
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build, tag, and push image to GHCR
      id: build-image
      env:
        IMAGE_NAME: horizon-frontend
        COMMIT_ID: ${{ github.sha }}
        ENV: ${{ secrets.STAGING_ENV }}
      run: |
        echo "$ENV" >> .env
        IMAGE_TAG=$(echo $COMMIT_ID | cut -c 1-7)
        docker build -t $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG .
        docker push $REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG
        echo "image=$REGISTRY/$REPO_NAME/$IMAGE_NAME:develop-$IMAGE_TAG" >> $GITHUB_OUTPUT
        
    - name: Deploy to Server Instance
      env:
          IMAGE: ${{ steps.build-image.outputs.image }}
          TOKEN: ${{ secrets.DOCKER_TOKEN }}
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.DEPLOY_SERVER }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: IMAGE,TOKEN
          script: |
            echo "$TOKEN" | docker login ghcr.io -u USERNAME --password-stdin
            export HORIZON_FRONTEND_IMAGE="$IMAGE"
            docker compose -f /home/ubuntu/optisage/dev-horizon-frontend/compose.yaml up -d
            docker system prune -af
            docker ps